package com.example.testgreendao.entity;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.testgreendao.bean.Bag;
import com.example.testgreendao.bean.Student;
import com.example.testgreendao.bean.Book;
import com.example.testgreendao.bean.BookB;
import com.example.testgreendao.bean.StudentB;
import com.example.testgreendao.bean.StudentBook;

import com.example.testgreendao.entity.BagDao;
import com.example.testgreendao.entity.StudentDao;
import com.example.testgreendao.entity.BookDao;
import com.example.testgreendao.entity.BookBDao;
import com.example.testgreendao.entity.StudentBDao;
import com.example.testgreendao.entity.StudentBookDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bagDaoConfig;
    private final DaoConfig studentDaoConfig;
    private final DaoConfig bookDaoConfig;
    private final DaoConfig bookBDaoConfig;
    private final DaoConfig studentBDaoConfig;
    private final DaoConfig studentBookDaoConfig;

    private final BagDao bagDao;
    private final StudentDao studentDao;
    private final BookDao bookDao;
    private final BookBDao bookBDao;
    private final StudentBDao studentBDao;
    private final StudentBookDao studentBookDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bagDaoConfig = daoConfigMap.get(BagDao.class).clone();
        bagDaoConfig.initIdentityScope(type);

        studentDaoConfig = daoConfigMap.get(StudentDao.class).clone();
        studentDaoConfig.initIdentityScope(type);

        bookDaoConfig = daoConfigMap.get(BookDao.class).clone();
        bookDaoConfig.initIdentityScope(type);

        bookBDaoConfig = daoConfigMap.get(BookBDao.class).clone();
        bookBDaoConfig.initIdentityScope(type);

        studentBDaoConfig = daoConfigMap.get(StudentBDao.class).clone();
        studentBDaoConfig.initIdentityScope(type);

        studentBookDaoConfig = daoConfigMap.get(StudentBookDao.class).clone();
        studentBookDaoConfig.initIdentityScope(type);

        bagDao = new BagDao(bagDaoConfig, this);
        studentDao = new StudentDao(studentDaoConfig, this);
        bookDao = new BookDao(bookDaoConfig, this);
        bookBDao = new BookBDao(bookBDaoConfig, this);
        studentBDao = new StudentBDao(studentBDaoConfig, this);
        studentBookDao = new StudentBookDao(studentBookDaoConfig, this);

        registerDao(Bag.class, bagDao);
        registerDao(Student.class, studentDao);
        registerDao(Book.class, bookDao);
        registerDao(BookB.class, bookBDao);
        registerDao(StudentB.class, studentBDao);
        registerDao(StudentBook.class, studentBookDao);
    }
    
    public void clear() {
        bagDaoConfig.clearIdentityScope();
        studentDaoConfig.clearIdentityScope();
        bookDaoConfig.clearIdentityScope();
        bookBDaoConfig.clearIdentityScope();
        studentBDaoConfig.clearIdentityScope();
        studentBookDaoConfig.clearIdentityScope();
    }

    public BagDao getBagDao() {
        return bagDao;
    }

    public StudentDao getStudentDao() {
        return studentDao;
    }

    public BookDao getBookDao() {
        return bookDao;
    }

    public BookBDao getBookBDao() {
        return bookBDao;
    }

    public StudentBDao getStudentBDao() {
        return studentBDao;
    }

    public StudentBookDao getStudentBookDao() {
        return studentBookDao;
    }

}
